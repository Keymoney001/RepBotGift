Compilation failed

File: /home/runner/workspace/src/pages/chart/smart-trading-display.tsx:1:1
  Ã— Module build failed:
  â”œâ”€â–¶   Ã—   Ã— Return statement is not allowed here
  â”‚     â”‚       â•­â”€[/home/runner/workspace/src/pages/chart/smart-trading-display.tsx:3494:1]
  â”‚     â”‚  3491 â”‚         };
  â”‚     â”‚  3492 â”‚
  â”‚     â”‚  3493 â”‚         // Enhance the controls container with a status indicator
  â”‚     â”‚  3494 â”‚ â•­â”€â–¶     return (
  â”‚     â”‚  3495 â”‚ â”‚           <div className={classNames('smart-trading-display', {
  â”‚     â”‚  3496 â”‚ â”‚               'smart-trading-display--run-panel-open': is_drawer_open
  â”‚     â”‚  3497 â”‚ â”‚           })}>
  â”‚     â”‚  3498 â”‚ â”‚               <div className="smart-trading-header">
  â”‚     â”‚  3499 â”‚ â”‚                   <h2>{localize('Smart Trading')}</h2>
  â”‚     â”‚  3500 â”‚ â”‚                   <div className="controls-container">
  â”‚     â”‚  3501 â”‚ â”‚                       <div className="control-item">
  â”‚     â”‚  3502 â”‚ â”‚                           <label htmlFor="symbol-select">{localize('Symbol')}:</label>
  â”‚     â”‚  3503 â”‚ â”‚                           <select
  â”‚     â”‚  3504 â”‚ â”‚                               id="symbol-select"
  â”‚     â”‚  3505 â”‚ â”‚                               value={selectedSymbol}
  â”‚     â”‚  3506 â”‚ â”‚                               onChange={handleSymbolChange}
  â”‚     â”‚  3507 â”‚ â”‚                               className="symbol-select"
  â”‚     â”‚  3508 â”‚ â”‚                           >
  â”‚     â”‚  3509 â”‚ â”‚                               {symbolOptions.map(option => (
  â”‚     â”‚  3510 â”‚ â”‚                                   <option key={option.value} value={option.value}>
  â”‚     â”‚  3511 â”‚ â”‚                                       {option.label}
  â”‚     â”‚  3512 â”‚ â”‚                                   </option>
  â”‚     â”‚  3513 â”‚ â”‚                               ))}
  â”‚     â”‚  3514 â”‚ â”‚                           </select>
  â”‚     â”‚  3515 â”‚ â”‚                       </div>
  â”‚     â”‚  3516 â”‚ â”‚                       <div className="control-item">
  â”‚     â”‚  3517 â”‚ â”‚                           <label htmlFor="tick-count-input">{localize('Ticks')}:</label>
  â”‚     â”‚  3518 â”‚ â”‚                           <input
  â”‚     â”‚  3519 â”‚ â”‚                               id="tick-count-input"
  â”‚     â”‚  3520 â”‚ â”‚                               type="number"
  â”‚     â”‚  3521 â”‚ â”‚                               min="10" // Min for validation, actual default on blur is 120
  â”‚     â”‚  3522 â”‚ â”‚                               max="5000"
  â”‚     â”‚  3523 â”‚ â”‚                               value={tickCountInput} // Use the UI state for display
  â”‚     â”‚  3524 â”‚ â”‚                               onChange={handleTickCountChange}
  â”‚     â”‚  3525 â”‚ â”‚                               onBlur={handleTickCountBlur} // Validate and set actual tickCount on blur
  â”‚     â”‚  3526 â”‚ â”‚                               className="tick-count-input"
  â”‚     â”‚  3527 â”‚ â”‚                           />
  â”‚     â”‚  3528 â”‚ â”‚                       </div>
  â”‚     â”‚  3529 â”‚ â”‚                       <div className="price-display">
  â”‚     â”‚  3530 â”‚ â”‚                           {localize('Price')}: <strong>{currentPrice || 'N/A'}</strong>
  â”‚     â”‚  3531 â”‚ â”‚                           <span className="update-indicator"></span>
  â”‚     â”‚  3532 â”‚ â”‚                       </div>
  â”‚     â”‚  3533 â”‚ â”‚                       <button onClick={reconnectAnalyzer} className="reconnect-button">
  â”‚     â”‚  3534 â”‚ â”‚                           ðŸ”„ {localize('Reconnect')}
  â”‚     â”‚  3535 â”‚ â”‚                       </button>
  â”‚     â”‚  3536 â”‚ â”‚                   </div>
  â”‚     â”‚  3537 â”‚ â”‚               </div>
  â”‚     â”‚  3538 â”‚ â”‚
  â”‚     â”‚  3539 â”‚ â”‚               <div className="smart-trading-strategies">
  â”‚     â”‚  3540 â”‚ â”‚                   {analysisStrategies.map(strategy => {
  â”‚     â”‚  3541 â”‚ â”‚                       const met = isConditionMet(strategy.id);
  â”‚     â”‚  3542 â”‚ â”‚                       return (
  â”‚     â”‚  3543 â”‚ â”‚                           <div
  â”‚     â”‚  3544 â”‚ â”‚                               key={strategy.id}
  â”‚     â”‚  3545 â”‚ â”‚                               className={`strategy-card ${strategy.activeContractType ? 'trading' : ''}`}
  â”‚     â”‚  3546 â”‚ â”‚                               data-strategy-id={strategy.id}
  â”‚     â”‚  3547 â”‚ â”‚                           >
  â”‚     â”‚  3548 â”‚ â”‚                               <div className="strategy-card__header">
  â”‚     â”‚  3549 â”‚ â”‚                                   <h3 className="strategy-card__name">{strategy.name}</h3>
  â”‚     â”‚  3550 â”‚ â”‚                                   <div className="condition-indicator-container">
  â”‚     â”‚  3551 â”‚ â”‚                                       <span
  â”‚     â”‚  3552 â”‚ â”‚                                           className={`condition-indicator ${met ? 'active' : ''}`}
  â”‚     â”‚  3553 â”‚ â”‚                                           title={met ? localize('Condition met') : localize('Condition not met')}
  â”‚     â”‚  3554 â”‚ â”‚                                       />
  â”‚     â”‚  3555 â”‚ â”‚                                   </div>
  â”‚     â”‚  3556 â”‚ â”‚                               </div>
  â”‚     â”‚  3557 â”‚ â”‚
  â”‚     â”‚  3558 â”‚ â”‚                               <div className="strategy-card__analysis-content">
  â”‚     â”‚  3559 â”‚ â”‚                                   {renderAnalysisContent(strategy.id)}
  â”‚     â”‚  3560 â”‚ â”‚                               </div>
  â”‚     â”‚  3561 â”‚ â”‚
  â”‚     â”‚  3562 â”‚ â”‚                               <div className="strategy-card__settings">
  â”‚     â”‚  3563 â”‚ â”‚                                   <div className="setting-item">
  â”‚     â”‚  3564 â”‚ â”‚                                       <label htmlFor={`${strategy.id}-stake`}>{localize('Stake')}</label>
  â”‚     â”‚  3565 â”‚ â”‚                                       <input
  â”‚     â”‚  3566 â”‚ â”‚                                           id={`${strategy.id}-stake`}
  â”‚     â”‚  3567 â”‚ â”‚                                           type="number"
  â”‚     â”‚  3568 â”‚ â”‚                                           min="0.35"
  â”‚     â”‚  3569 â”‚ â”‚                                           step="0.01"
  â”‚     â”‚  3570 â”‚ â”‚                                           value={strategy.settings?.stakeInput !== undefined ? strategy.settings.stakeInput : strategy.settings.stake}
  â”‚     â”‚  3571 â”‚ â”‚                                           onChange={(e) => handleSettingChange(strategy.id, 'stake', e.target.value)}
  â”‚     â”‚  3572 â”‚ â”‚                                           onBlur={(e) => handleInputBlur(strategy.id, 'stake', e.target.value)}
  â”‚     â”‚  3573 â”‚ â”‚                                           disabled={!!strategy.activeContractType}
  â”‚     â”‚  3574 â”‚ â”‚                                       />
  â”‚     â”‚  3575 â”‚ â”‚                                   </div>
  â”‚     â”‚  3576 â”‚ â”‚                                   <div className="setting-item">
  â”‚     â”‚  3577 â”‚ â”‚                                       <label htmlFor={`${strategy.id}-ticks`}>{localize('Ticks')}</label>
  â”‚     â”‚  3578 â”‚ â”‚                                       <input
  â”‚     â”‚  3579 â”‚ â”‚                                           id={`${strategy.id}-ticks`}
  â”‚     â”‚  3580 â”‚ â”‚                                           type="number"
  â”‚     â”‚  3581 â”‚ â”‚                                           min="1"
  â”‚     â”‚  3582 â”‚ â”‚                                           step="1" value={strategy.settings?.ticksInput !== undefined ? strategy.settings.ticksInput : strategy.settings.ticks}
  â”‚     â”‚  3583 â”‚ â”‚                                           onChange={(e) => handleSettingChange(strategy.id, 'ticks', e.target.value)}
  â”‚     â”‚  3584 â”‚ â”‚                                           onBlur={(e) => handleInputBlur(strategy.id, 'ticks', e.target.value)}
  â”‚     â”‚  3585 â”‚ â”‚                                           disabled={!!strategy.activeContractType}
  â”‚     â”‚  3586 â”‚ â”‚                                       />
  â”‚     â”‚  3587 â”‚ â”‚                                   </div>
  â”‚     â”‚  3588 â”‚ â”‚                                   <div className="setting-item">
  â”‚     â”‚  3589 â”‚ â”‚                                       <label htmlFor={`${strategy.id}-martingale`}>{localize('Martingale')}</label>
  â”‚     â”‚  3590 â”‚ â”‚                                       <input
  â”‚     â”‚  3591 â”‚ â”‚                                           id={`${strategy.id}-martingale`}
  â”‚     â”‚  3592 â”‚ â”‚                                           type="number"
  â”‚     â”‚  3593 â”‚ â”‚                                           min="1"
  â”‚     â”‚  3594 â”‚ â”‚                                           step="0.1"
  â”‚     â”‚  3595 â”‚ â”‚                                           value={strategy.settings?.martingaleMultiplierInput !== undefined ?
  â”‚     â”‚  3596 â”‚ â”‚                                               strategy.settings.martingaleMultiplierInput : strategy.settings.martingaleMultiplier}
  â”‚     â”‚  3597 â”‚ â”‚                                           onChange={(e) => handleSettingChange(strategy.id, 'martingaleMultiplier', e.target.value)}
  â”‚     â”‚  3598 â”‚ â”‚                                           onBlur={(e) => handleInputBlur(strategy.id, 'martingaleMultiplier', e.target.value)}
  â”‚     â”‚  3599 â”‚ â”‚                                           disabled={!!strategy.activeContractType}
  â”‚     â”‚  3600 â”‚ â”‚                                       />
  â”‚     â”‚  3601 â”‚ â”‚                                   </div>
  â”‚     â”‚  3602 â”‚ â”‚                               </div>                            <div className="strategy-card__actions">
  â”‚     â”‚  3603 â”‚ â”‚                                   <Button
  â”‚     â”‚  3604 â”‚ â”‚                                       className="strategy-card__trade-button strategy-card__trade-button--single"
  â”‚     â”‚  3605 â”‚ â”‚                                       onClick={() => handleAutoTrade(strategy.id)}
  â”‚     â”‚  3606 â”‚ â”‚                                       size="md"
  â”‚     â”‚  3607 â”‚ â”‚                                       variant={strategy.activeContractType ? "contained" : "outlined"}
  â”‚     â”‚  3608 â”‚ â”‚                                       disabled={!currentPrice} // Disable button when no price data is available
  â”‚     â”‚  3609 â”‚ â”‚                                   >
  â”‚     â”‚  3610 â”‚ â”‚                                       {strategy.activeContractType
  â”‚     â”‚  3611 â”‚ â”‚                                           ? localize('Stop Auto Trading')
  â”‚     â”‚  3612 â”‚ â”‚                                           : localize('Start Auto Trading')}
  â”‚     â”‚  3613 â”‚ â”‚                                   </Button>
  â”‚     â”‚  3614 â”‚ â”‚                               </div>
  â”‚     â”‚  3615 â”‚ â”‚
  â”‚     â”‚  3616 â”‚ â”‚                               {/* Enhanced Trading Status Display
  â”‚     â”‚  3617 â”‚ â”‚                               {strategy.activeContractType && (
  â”‚     â”‚  3618 â”‚ â”‚                                   <div className="strategy-card__status">
  â”‚     â”‚  3619 â”‚ â”‚                                       <div className="status-info">
  â”‚     â”‚  3620 â”‚ â”‚                                           <Text size="xs" weight="bold">
  â”‚     â”‚  3621 â”‚ â”‚                                               Current Stake: {displayStake(strategy.id)}
  â”‚     â”‚  3622 â”‚ â”‚                                           </Text>
  â”‚     â”‚  3623 â”‚ â”‚                                           {Object.keys(activeContracts).length > 0 && (
  â”‚     â”‚  3624 â”‚ â”‚                                               <Text size="2xs" className="active-contracts">
  â”‚     â”‚  3625 â”‚ â”‚                                                   Active Trade: Contract #{Object.keys(activeContracts)[0]}
  â”‚     â”‚  3626 â”‚ â”‚                                               </Text>
  â”‚     â”‚  3627 â”‚ â”‚                                           )}
  â”‚     â”‚  3628 â”‚ â”‚                                           {consecutiveLosses[strategy.id] > 0 && (
  â”‚     â”‚  3629 â”‚ â”‚                                               <Text size="2xs" className="martingale-info">
  â”‚     â”‚  3630 â”‚ â”‚                                                   Martingale Active: {consecutiveLosses[strategy.id]} consecutive loss{consecutiveLosses[strategy.id] > 1 ? 'es' : ''}
  â”‚     â”‚  3631 â”‚ â”‚                                               </Text>
  â”‚     â”‚  3632 â”‚ â”‚                                           )}
  â”‚     â”‚  3633 â”‚ â”‚                                           {lastTradeResult && (
  â”‚     â”‚  3634 â”‚ â”‚                                               <div className="trade-stats">
  â”‚     â”‚  3635 â”‚ â”‚                                                   <Text size="2xs" className={`trade-result ${lastTradeResult === 'WIN' ? 'win' : 'loss'}`}>
  â”‚     â”‚  3636 â”‚ â”‚                                                       Last Trade: {lastTradeResult}
  â”‚     â”‚  3637 â”‚ â”‚                                                   </Text>
  â”‚     â”‚  3638 â”‚ â”‚                                                   <Text size="2xs">
  â”‚     â”‚  3639 â”‚ â”‚                                                       W: {winCount} / L: {lossCount} ({winCount + lossCount > 0 ? Math.round(winCount / (winCount + lossCount) * 100) : 0}% Win)
  â”‚     â”‚  3640 â”‚ â”‚                                                   </Text>
  â”‚     â”‚  3641 â”‚ â”‚                                               </div>
  â”‚     â”‚  3642 â”‚ â”‚                                           )}
  â”‚     â”‚  3643 â”‚ â”‚                                           {met && (
  â”‚     â”‚  3644 â”‚ â”‚                                               <div className="condition-status">
  â”‚     â”‚  3645 â”‚ â”‚                                                   <Text size="2xs" className="condition-met">
  â”‚     â”‚  3646 â”‚ â”‚                                                       âœ“ Condition Met - Waiting for trade execution
  â”‚     â”‚  3647 â”‚ â”‚                                                   </Text>
  â”‚     â”‚  3648 â”‚ â”‚                                               </div>
  â”‚     â”‚  3649 â”‚ â”‚                                           )}
  â”‚     â”‚  3650 â”‚ â”‚                                           {isTradeInProgress && (
  â”‚     â”‚  3651 â”‚ â”‚                                               <div className="trade-progress">
  â”‚     â”‚  3652 â”‚ â”‚                                                   <Text size="2xs" className="trade-in-progress">
  â”‚     â”‚  3653 â”‚ â”‚                                                       ðŸ”„ Trade in progress...
  â”‚     â”‚  3654 â”‚ â”‚                                                   </Text>
  â”‚     â”‚  3655 â”‚ â”‚                                               </div>
  â”‚     â”‚  3656 â”‚ â”‚                                           )}
  â”‚     â”‚  3657 â”‚ â”‚                                       </div>
  â”‚     â”‚  3658 â”‚ â”‚                                   </div>
  â”‚     â”‚  3659 â”‚ â”‚                               )} */}
  â”‚     â”‚  3660 â”‚ â”‚                           </div>
  â”‚     â”‚  3661 â”‚ â”‚                       );
  â”‚     â”‚  3662 â”‚ â”‚                   })}
  â”‚     â”‚  3663 â”‚ â”‚               </div>
  â”‚     â”‚  3664 â”‚ â”‚
  â”‚     â”‚  3665 â”‚ â”‚               <DebugButton />
  â”‚     â”‚  3666 â”‚ â”‚           </div>
  â”‚     â”‚  3667 â”‚ â•°â”€â–¶     );
  â”‚     â”‚  3668 â”‚     });
  â”‚     â”‚  3669 â”‚
  â”‚     â”‚  3670 â”‚     export default SmartTradingDisplay;
  â”‚     â”‚       â•°â”€â”€â”€â”€
  â”‚     â”‚   Ã— Expression expected
  â”‚     â”‚       â•­â”€[/home/runner/workspace/src/pages/chart/smart-trading-display.tsx:3668:1]
  â”‚     â”‚  3665 â”‚             <DebugButton />
  â”‚     â”‚  3666 â”‚         </div>
  â”‚     â”‚  3667 â”‚     );
  â”‚     â”‚  3668 â”‚ });
  â”‚     â”‚       Â· â”€
  â”‚     â”‚  3669 â”‚
  â”‚     â”‚  3670 â”‚ export default SmartTradingDisplay;
  â”‚     â”‚       â•°â”€â”€â”€â”€
  â”‚     â”‚
  â”‚   
  â•°â”€â–¶ Syntax Error
Fix error, click outside, or press Esc to close the overlay.

Disable overlay by setting Rsbuild's dev.client.overlay config to false.